{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */

    /* Language and Environment */
    "target": "es2022", /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */

    /* Modules */
    "module": "NodeNext", /* Specify what module code is generated. */
    "moduleResolution": "NodeNext", /* Specify how TypeScript looks up a file from a given module specifier. */
    "importHelpers": true, /* Allow importing helper functions from tslib once per project, instead of including them per-file. */
    "allowSyntheticDefaultImports": true, /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true, /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true, /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "strict": false, /* Enable all strict type-checking options. */
    "noImplicitAny": false, /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "strictNullChecks": false, /* When type checking, take into account 'null' and 'undefined'. */
    "strictFunctionTypes": false, /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    "strictBindCallApply": false, /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
    "strictPropertyInitialization": false, /* Check for class properties that are declared but not set in the constructor. */
    "noImplicitThis": false, /* Enable error reporting when 'this' is given the type 'any'. */
    "useUnknownInCatchVariables": false, /* Default catch clause variables as 'unknown' instead of 'any'. */
    "alwaysStrict": false, /* Ensure 'use strict' is always emitted. */
    "noUnusedLocals": false, /* Enable error reporting when local variables aren't read. */
    "noUnusedParameters": false, /* Raise an error when a function parameter isn't read. */
    "exactOptionalPropertyTypes": false, /* Interpret optional property types as written, rather than adding 'undefined'. */
    "noImplicitReturns": false, /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noFallthroughCasesInSwitch": false, /* Enable error reporting for fallthrough cases in switch statements. */
    "noUncheckedIndexedAccess": false, /* Add 'undefined' to a type when accessed using an index. */
    "noImplicitOverride": false, /* Ensure overriding members in derived classes are marked with an override modifier. */
    "noPropertyAccessFromIndexSignature": false, /* Enforces using indexed accessors for keys declared using an indexed type. */
    "allowUnusedLabels": false, /* Disable error reporting for unused labels. */
    "allowUnreachableCode": false, /* Disable error reporting for unreachable code. */
    "resolveJsonModule": true,
    /* Completeness */
    "skipLibCheck": true /* Skip type checking all .d.ts files. */
  }
}
